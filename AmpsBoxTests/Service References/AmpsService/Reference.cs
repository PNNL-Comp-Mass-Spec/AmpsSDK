//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmpsBoxTests.AmpsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AmpsService.IAmpsCommunication")]
    public interface IAmpsCommunication {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmpsCommunication/GetVersion", ReplyAction="http://tempuri.org/IAmpsCommunication/GetVersionResponse")]
        string GetVersion(string deviceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmpsCommunication/GetVersion", ReplyAction="http://tempuri.org/IAmpsCommunication/GetVersionResponse")]
        System.Threading.Tasks.Task<string> GetVersionAsync(string deviceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmpsCommunication/OpenCommunication", ReplyAction="http://tempuri.org/IAmpsCommunication/OpenCommunicationResponse")]
        string OpenCommunication(string deviceName, string serialPortProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmpsCommunication/OpenCommunication", ReplyAction="http://tempuri.org/IAmpsCommunication/OpenCommunicationResponse")]
        System.Threading.Tasks.Task<string> OpenCommunicationAsync(string deviceName, string serialPortProperties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmpsCommunication/CloseAmpsBox", ReplyAction="http://tempuri.org/IAmpsCommunication/CloseAmpsBoxResponse")]
        string CloseAmpsBox(string deviceName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAmpsCommunication/CloseAmpsBox", ReplyAction="http://tempuri.org/IAmpsCommunication/CloseAmpsBoxResponse")]
        System.Threading.Tasks.Task<string> CloseAmpsBoxAsync(string deviceName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAmpsCommunicationChannel : AmpsBoxTests.AmpsService.IAmpsCommunication, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AmpsCommunicationClient : System.ServiceModel.ClientBase<AmpsBoxTests.AmpsService.IAmpsCommunication>, AmpsBoxTests.AmpsService.IAmpsCommunication {
        
        public AmpsCommunicationClient() {
        }
        
        public AmpsCommunicationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AmpsCommunicationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AmpsCommunicationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AmpsCommunicationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetVersion(string deviceName) {
            return base.Channel.GetVersion(deviceName);
        }
        
        public System.Threading.Tasks.Task<string> GetVersionAsync(string deviceName) {
            return base.Channel.GetVersionAsync(deviceName);
        }
        
        public string OpenCommunication(string deviceName, string serialPortProperties) {
            return base.Channel.OpenCommunication(deviceName, serialPortProperties);
        }
        
        public System.Threading.Tasks.Task<string> OpenCommunicationAsync(string deviceName, string serialPortProperties) {
            return base.Channel.OpenCommunicationAsync(deviceName, serialPortProperties);
        }
        
        public string CloseAmpsBox(string deviceName) {
            return base.Channel.CloseAmpsBox(deviceName);
        }
        
        public System.Threading.Tasks.Task<string> CloseAmpsBoxAsync(string deviceName) {
            return base.Channel.CloseAmpsBoxAsync(deviceName);
        }
    }
}
