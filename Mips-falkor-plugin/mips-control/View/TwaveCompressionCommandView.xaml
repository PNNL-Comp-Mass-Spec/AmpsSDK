<Controls:MetroWindow  x:Class="mips_control.View.TwaveCompressionCommandView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:viewModel="clr-namespace:mips_control.ViewModel"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:command="clr-namespace:Mips_net.Device;assembly=Mips-net"


             mc:Ignorable="d" BorderBrush="{DynamicResource AccentColorBrush}"
              BorderThickness="1"
              d:DataContext="{d:DesignInstance viewModel:TwaveCompressionCommandViewModel}">
	
	<Controls:MetroWindow.Resources>
		
		<ObjectDataProvider x:Key="stateCommnads"
		                    MethodName="GetValues" 
		                    ObjectType="{x:Type sys:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="command:StateCommands"/>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
		<ObjectDataProvider x:Key="twaveCommnads"
		                    MethodName="GetValues" 
		                    ObjectType="{x:Type sys:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="command:TWaveParameter"/>
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>

		<Style x:Key="errorStyletest" TargetType="{x:Type TextBox}">

			<Style.Triggers>
				<Trigger Property="IsEnabled" Value="False">
					<Setter Property="Background" 
					        Value="Gray"/>
					<Setter Property="BorderThickness" 
					        Value="0"/>
					<Setter Property="ToolTip" 
					        Value="Value cannot be set"/>
				</Trigger>
				<Trigger Property="Validation.HasError" Value="True">
					<Setter Property="ToolTip" 
					        Value="{Binding RelativeSource={RelativeSource Self},
														 Path=(Validation.Errors)[0].ErrorContent}"/>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Controls:MetroWindow.Resources>
	<WrapPanel>
		<Grid Margin="200,20,0,0">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>
	    <Grid.RowDefinitions>
		    <RowDefinition Height="Auto"/>
		    <RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		    
		</Grid.RowDefinitions>
		<StackPanel Grid.Column="0" Grid.Row="0">
					<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto" />
					
				</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
						<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
					<GroupBox Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Header="State Command    " FontSize="10" FontWeight="Bold">
						<ListBox  ItemsSource="{Binding Source={StaticResource stateCommnads}}" 
								SelectedItem="{Binding SelectedState}" />
					</GroupBox>
				<Button Content="Add"  VerticalAlignment="Bottom" Grid.Column="1" Grid.Row="1" Margin="10,10,0,6" Width="55" BorderBrush="Black" Command="{Binding AddStateCommand}">
							</Button>
					<Button Content="Remove" Grid.Column="1" Grid.Row="2" Margin="10,0,0,6" BorderBrush="Black" Width="55" Command="{Binding RemoveCommand}">
							</Button>
				</Grid>
		</StackPanel>
		<WrapPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="0,10,0,10">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
					
				</Grid.RowDefinitions>

				<GroupBox  Header="TWave Parameters" FontSize="12" FontWeight="Bold" Grid.Column="0" Grid.Row="0">
					<ListBox ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" 
							 ItemsSource="{Binding Source={StaticResource twaveCommnads}}" 
					         SelectedItem="{Binding SelectedTWaveParameter}"/>
				</GroupBox>
				<StackPanel Grid.Column="0" Grid.Row="1" Margin="10,0,0,10">
						<Button Content="Start Loop"  Width="80" HorizontalAlignment="Left" VerticalAlignment="Bottom"  Margin="0,0,0,6" BorderBrush="Black" Command="{Binding StartLoop}">
						</Button>
						<StackPanel Orientation="Horizontal">
							<Button Content="End Loop" Width="80" HorizontalAlignment="Left" VerticalAlignment="Bottom"  Margin="0,0,0,6" BorderBrush="Black" Command="{Binding EndLoop}" >
						</Button>
						<!--<TextBox Width="40" Margin="5,0,0,8" Text="" BorderBrush="Black">
							</TextBox>-->
					</StackPanel>
						</StackPanel>

							<StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="0">
				<Button Content="Add"  Command="{Binding AddTWaveParameterCommand}" VerticalAlignment="Top" Grid.Column="1" Grid.Row="1" Margin="10,10,0,6"  Width="55" BorderBrush="Black">
				</Button>
				<!--		<Button Content="Remove"  Command="{Binding RemoveStateCommand}" VerticalAlignment="Top" Margin="10,0,0,6" BorderBrush="Black" >
				</Button>-->
				</StackPanel>
			</Grid>
		</WrapPanel>
		
			<StackPanel  Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Margin="50,30,0,0"  >
				<GroupBox Header="SelectedCommands" FontSize="10" FontWeight="Normal"  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
					<StackPanel Orientation="Vertical">
						<DataGrid x:Name="CommandDataGrid" AutoGenerateColumns="False"  SelectionMode="Extended" SelectedItem="{Binding SelectedCompressionCommands}"
								  ItemsSource="{Binding SelectedCommandViewModelList}"
						  BorderBrush="DodgerBlue" BorderThickness="2"  >
							<!--<DataGrid.RowValidationRules>
								<validation:RegexValidationRules ValidationStep="UpdatedValue" ValidatesOnTargetUpdated="True"/>
							</DataGrid.RowValidationRules>-->
							<DataGrid.Resources>
								<Style TargetType="DataGridRow">
									<Setter Property="IsSelected" Value="{Binding IsSelected}"/>
								</Style>
										<Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
								
								<Style.Triggers>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Background" 
										        Value="Gray"/>
										<Setter Property="BorderThickness" 
										        Value="0"/>
											<Setter Property="ToolTip" 
										        Value="Value cannot be set"/>
										</Trigger>
									<Trigger Property="Validation.HasError" Value="True">
										<Setter Property="ToolTip" 
										        Value="{Binding RelativeSource={RelativeSource Self},
														 Path=(Validation.Errors)[0].ErrorContent}"/>
									</Trigger>
								</Style.Triggers>
							</Style>
						</DataGrid.Resources>
						<DataGrid.Columns  >
					<DataGridTemplateColumn Header="Commands"  IsReadOnly="True" Width="100">
						<DataGridTemplateColumn.CellTemplate >
							<DataTemplate>
									<TextBlock Text="{Binding TWaveCommand}" />
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>

								<DataGridTemplateColumn Header="ParameterValue" Width="200">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
											<TextBox Style="{StaticResource errorStyle}" BorderThickness="2" Text="{Binding Path=TWaveCommandValue, ValidatesOnNotifyDataErrors=True,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=EnableParameterValue  }">
												</TextBox>
										</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
						</DataGridTemplateColumn>
							<!--	<DataGridCheckBoxColumn Header="IsValid" Binding="{Binding IsValid,UpdateSourceTrigger=PropertyChanged}">
									
								</DataGridCheckBoxColumn>
							<DataGridTemplateColumn Header="IsValid">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate>
									<CheckBox IsChecked="{Binding IsValid}"/>
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>
							</DataGridTemplateColumn>-->
							</DataGrid.Columns>
					
			</DataGrid>
						<WrapPanel Margin="50,10,0,0" Grid.Column="1" Grid.Row="3" >
							<RadioButton GroupName="WaveType" Content="Square" IsChecked="{Binding SquareWaveSelected}" ></RadioButton>
							<RadioButton GroupName="WaveType" Content="ARB"  Margin="10,0,0,0" IsChecked="{Binding ARBWaveSelected}"></RadioButton>
							<Button Command="{Binding GenerateCompressionString}"  Margin="50,10,0,0" Width="75" BorderBrush="DodgerBlue" Content="Generate">
							</Button>

						</WrapPanel>
								
						
				</StackPanel>
					
				</GroupBox>
				
			</StackPanel>
		
	</Grid>

		</WrapPanel>
</Controls:MetroWindow>
